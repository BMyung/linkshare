{"version":3,"sources":["components/header/0.jfif","components/music/guitarra.jfif","components/header/header.js","components/card/card.js","components/social/social.js","components/pro/pro.js","components/music/music.js","components/contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","headshot","alt","React","Component","Card","divStyle","backgroundImage","this","props","item","img","href","url","style","title","tagline","Social","state","button","buttons","socialLinks","map","i","key","backgroundColor","bg","fa","Professional","linkList","testlist","d","Music","musicStore","storeList","storeLinks","text","color","cover","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.769ddfaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.34520d7f.jfif\";","module.exports = __webpack_public_path__ + \"static/media/guitarra.7a67ab38.jfif\";","import React from \"react\"\r\nimport headshot from './0.jfif'\r\n\r\nexport class Header extends React.Component{\r\n    render(){\r\n        return (\r\n        <div className=\"header\">\r\n        <img src={headshot} alt=\"JohnG headshot\" className=\"headshot\" />\r\n            <h1>John Guastaferro</h1>\r\n            <h2>Connecting People to the Extraordinary</h2>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport class Card extends React.Component{\r\n    render(){\r\n        const divStyle = {\r\n            backgroundImage: 'url(' + this.props.item.img + ')',\r\n          };\r\n        return (\r\n        <div>\r\n            <a href={this.props.item.url} className='card' style={divStyle}>\r\n            <div className=\"caption\">\r\n            <h2 className = \"cardTitle\">{this.props.item.title}</h2>\r\n            <h3>{this.props.item.tagline}</h3>\r\n        </div>\r\n            </a>\r\n        </div>\r\n\r\n    )\r\n}\r\n}\r\n","import React from 'react'\r\n\r\nexport class Social extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            // linkList: testlist,\r\n            button: buttons\r\n    }};\r\n    render (){\r\n        const socialLinks = this.state.button.map(i => <li className='button' key= {i.url}style={{backgroundColor: i.bg}}><a className = 'buttonLink'\r\n        href={i.url}><span className='icon'><i className={i.fa}></i></span></a></li>)\r\n        return (\r\n            <div className='socialMedia'>\r\n            <div className='iconContainer'>\r\n            <ul>\r\n                {socialLinks}\r\n            </ul>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst buttons = [{\r\n    url: 'https://www.facebook.com/johnGmagic',\r\n    fa: 'fab fa-facebook-f',\r\n    bg: '#3b5998'},\r\n    {url: 'https://www.linkedin.com/in/johnguastaferro/',\r\n    fa: 'fab fa-linkedin-in',\r\n    bg: '#0077B5'\r\n    },\r\n    {\r\n        url: 'http://www.instagram.com/johngmagic',\r\n        fa : 'fab fa-instagram',\r\n        bg: '#bc2a8d'\r\n    },\r\n    {url: 'https://twitter.com/johngmagic',\r\n    fa:\"fab fa-twitter\",\r\n    bg: '#1DA1F2'\r\n    }\r\n\r\n];","import React from 'react'\r\nimport {Card} from '../card/card'\r\nimport {Social} from '../social/social'\r\n\r\n\r\nexport class Professional extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            linkList: testlist,\r\n            // button: buttons\r\n    }};\r\nrender(){\r\n    return (\r\n        <div className = 'cat1'>\r\n      {this.state.linkList.map((d) => {\r\n         return (<Card item={d} key={d.title}/>)\r\n       })}\r\n       <Social />\r\n       \r\n      </div>\r\n    )}};\r\n\r\nconst testlist = [{\r\n    title: 'John G Entertainment',\r\n    tagline: 'Live Entertainment at its best',\r\n    img: 'magic.jpg',\r\n    url: 'http://www.magicjohng.com/'\r\n},\r\n{\r\n    title:'One Degree Connect',\r\n    tagline: 'Connecting Teams to Greatness', \r\n    img: 'audience.jpg',\r\n    url: 'http://www.onedegreeconnect.com/'\r\n},\r\n{\r\n    title: 'Anaheim Community Foundation',\r\n    tagline: '',\r\n    img: 'Samueli-ACF-Anaheim-Community-Impact-Grant.jpg',\r\n    url: 'http://www.anaheimcf.org/'\r\n}];\r\n\r\n\r\n","import React from 'react'\r\nimport cover from './guitarra.jfif'\r\n\r\nexport class Music extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            musicStore: storeList\r\n        }\r\n    }\r\n    render (){\r\n    const storeLinks = this.state.musicStore.map(d => <li className='storeButton' key= {d.text}><a href={d.url} style={{color: d.bg}}><span className='icon'><i className={d.img}></i>{d.text}</span></a></li>)\r\n        return (\r\n            <div className='music'>\r\n                <img src={cover} alt='guitar album cover' className='cover'/>\r\n                <h2>Discover John's latest album</h2>\r\n                <ul className='musicStores'>\r\n                    {storeLinks}\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst storeList = [{\r\n    text: 'GUITARRA on iTunes',\r\n    url: 'http://itunes.apple.com/album/id1498055997?ls=1&app=itunes',\r\n    img: 'fab fa-itunes-note', \r\n    bg: '#0070c9'\r\n},\r\n{\r\n    text: 'GUITARRA on Apple Music',\r\n    url: 'http://itunes.apple.com/album/id/1498055997',\r\n    img: 'fab fa-apple',\r\n    bg: '#da0f47',\r\n},\r\n{\r\n    text: 'GUITARRA on Spotify',\r\n    url: 'https://open.spotify.com/album/7m6vFG62jEdOpqBYitIPcY?si=G-_VtCAHSfG8WSLuX6-qpg',\r\n    img: 'fab fa-spotify',\r\n    bg: '#1DB954'\r\n}]","import React from 'react'\r\n\r\nexport class Contact extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className='contact'>\r\n                <div className='phone contactInfo'>\r\n                <a href='tel:7149040274'><span className='icon'><i className=\"fas fa-phone-alt\"></i>714-904-0274</span></a>\r\n                </div>\r\n                <div className= 'email contactInfo'>\r\n                <a href='mailto:john@onedegreeconnect.com'><span className='icon'><i className=\"fas fa-envelope\"></i>john@onedegreeconnect.com</span></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from './components/header/header';\nimport {Professional} from './components/pro/pro';\nimport {Music} from './components/music/music';\nimport {Contact} from './components/contact/contact'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Professional />\n      <Music />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}